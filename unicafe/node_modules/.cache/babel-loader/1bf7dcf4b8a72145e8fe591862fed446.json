{"ast":null,"code":"var _jsxFileName = \"/Users/asif/Downloads/WebDev/FullStackOpen2022/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 42\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad,\n    averageScore\n  } = _ref3;\n  const totalFeedback = good + bad + neutral;\n  const average = averageScore / totalFeedback;\n  const positive = good / totalFeedback;\n\n  if (totalFeedback < 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: totalFeedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [averageScore, setAverageScore] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n    setAverageScore(averageScore + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n    setAverageScore(averageScore + 0);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n    setAverageScore(averageScore - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      averageScore: averageScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ke0pYkEyCinBESnvzKBtls8QnbQ=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","StatisticLine","value","Statistics","good","neutral","bad","averageScore","totalFeedback","average","positive","App","setGood","setNeutral","setBad","setAverageScore","handleGoodClick","handleNeutralClick","handleBadClick"],"sources":["/Users/asif/Downloads/WebDev/FullStackOpen2022/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Button = ({handleClick, text}) => {\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst StatisticLine = ({text, value}) => <p>{text} {value}</p>\n\nconst Statistics = ({good, neutral, bad, averageScore}) => {\n\n  const totalFeedback = good+bad+neutral\n  const average = averageScore/totalFeedback\n  const positive = good/totalFeedback\n\n  if(totalFeedback < 1){\n    return (\n      <div>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    )\n  }\n  return (\n    <div>\n    <h1>statistics</h1>\n    <StatisticLine text=\"good\" value={good} />\n    <StatisticLine text=\"neutral\" value={neutral} />\n    <StatisticLine text=\"bad\" value={bad} />\n    <StatisticLine text=\"all\" value={totalFeedback} />\n    <StatisticLine text=\"average\" value={average} />\n    <StatisticLine text=\"positive\" value={positive} />\n    {/* <p>good {good}</p>\n    <p>neutral {neutral}</p>\n    <p>bad {bad}</p>\n    <p>all {totalFeedback}</p>\n    <p>average {averageScore/totalFeedback}</p>\n    <p>positive {good/totalFeedback}</p> */}\n  </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [averageScore, setAverageScore] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n    setAverageScore(averageScore+1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n    setAverageScore(averageScore+0)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n    setAverageScore(averageScore-1)\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGoodClick} text=\"good\" />\n      <Button handleClick={handleNeutralClick} text=\"neutral\" />\n      <Button handleClick={handleBadClick} text=\"bad\" />\n      {/* <button onClick={handleGoodClick}>good</button>\n      <button onClick={handleNeutralClick}>neutral</button>\n      <button onClick={handleBadClick}>bad</button> */}\n      \n      <Statistics good={good} neutral={neutral} bad={bad} averageScore={averageScore}  />\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}